{"version":3,"sources":["components/AddCategorie.js","components/GifGridItem.js","helpers/GetGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategorie","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","cat","value","onChange","target","type","GifGridItem","title","url","className","src","alt","getGif","category","a","encodeURI","fetch","resp","json","data","console","log","gifs","map","gif","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","setcategories","onClick","ReactDOM","render","document","getElementById"],"mappings":"0MA+BeA,MA3Bf,YAA0C,IAAlBC,EAAiB,EAAjBA,cACpB,EAAoCC,mBAAS,cAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACI,sBAAMC,SAPW,SAACC,GAClBA,EAAEC,iBACFN,GAAe,SAAAO,GAAG,OAAKL,GAAL,mBAAoBK,OACtCJ,EAAc,KAId,SACI,uBACIK,MAASN,EACTO,SAdc,SAACJ,GACvBF,EAAcE,EAAEK,OAAOF,QAcfG,KAAK,Y,QCVNC,EAVK,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEzB,OACI,sBAAKC,UAAU,yDAAf,UACI,qBAAKC,IAAOF,EAAKG,IAAOJ,IACxB,4BAAIA,Q,wBCPHK,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACZN,EADY,iDACqCO,UAAWF,GADhD,+DAECG,MAAMR,GAFP,cAEZS,EAFY,gBAGGA,EAAKC,OAHR,uBAGXC,EAHW,EAGXA,KAEPC,QAAQC,IAAIb,GACNc,EAAOH,EAAKI,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRlB,MAAOiB,EAAIjB,MACXC,IAAKgB,EAAIE,OAAOC,iBAAiBnB,QAVvB,kBAcXc,GAdW,4CAAH,sDCgCJM,MA1Bf,YAA8B,IAAZf,EAAW,EAAXA,SAEd,ECJwB,SAACA,GAEzB,MAA0BlB,mBAAS,CAC/BwB,KAAM,GACNU,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACNZ,QAAQC,IAAIR,GACZD,EAAOC,GACFoB,MAAM,SAACC,GACJH,EAAS,CACLZ,KAAMe,EACNL,SAAS,SAGtB,CAAChB,IAEGiB,EDdsBK,CAAatB,GAA9BqB,EAAZ,EAAOf,KAAWU,EAAlB,EAAkBA,QAGlB,OACI,qCACI,oBAAIpB,UAAU,sDAAd,SAAqEI,IACrE,mBAAGJ,UAAU,iDAAb,SAAgEoB,GAAW,aAE3E,qBAAKpB,UAAU,YAAf,SAEQyB,EAAKX,KAAK,SAAAW,GAAI,OACV,cAAC,EAAD,eAEQA,GADGA,EAAKT,aEoBzBW,EApCM,WAGjB,MAAoCzC,mBAAS,CAAC,kBAA9C,mBAAO0C,EAAP,KAAmBC,EAAnB,KAMA,OACI,qCACI,gDACA,cAAC,EAAD,CAAc5C,cAAiB4C,IAC/B,uBAEA,wBAAQC,QAVE,WACdD,GAAe,SAAArC,GAAG,mBAAQA,OAStB,qBACA,6BAEQoC,EAAWd,KAAK,SAAAV,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAYA,GADPA,Y,MCnBjC2B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d18c103e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react/cjs/react.development';\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction AddCategorie( {setCategories} ) {\r\n    const [inputValue, setinputValue] = useState('Hola Mundo');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value); \r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setCategories( cat => [inputValue, ...cat] );\r\n        setinputValue('');\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                value = {inputValue}\r\n                onChange = {handleInputChange}\r\n                type=\"text\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategorie.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategorie\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ({title, url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInUp animate__fast\">\r\n            <img src = {url} alt = {title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","export const getGif = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=kDTOUFzEvqHINnNpliU3P09NG212uGwb`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    console.log(url);\r\n    const gifs = data.map( gif => {\r\n        return {\r\n            id: gif.id,\r\n            title: gif.title,\r\n            url: gif.images.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","\r\nimport React from 'react';\r\n\r\nimport GifGridItem from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nfunction GifGrid({category}) {\r\n\r\n    const {data:imgs, loading} = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeInLeft animate__fast'>{category}</h3>\r\n            <p className='animate__animated animate__flash animate__fast'>{ loading && 'Cargando' }</p>\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    imgs.map( imgs => (\r\n                        <GifGridItem \r\n                            key = {imgs.id}\r\n                            {...imgs}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default GifGrid\r\n\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGif } from \"../helpers/GetGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        console.log(category);\r\n        getGif(category)\r\n            .then( (imgs) => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            });\r\n    }, [category]);\r\n\r\n    return state;\r\n\r\n}","import React, {useState} from 'react'\r\nimport AddCategorie from './components/AddCategorie';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    \r\n    \r\n    const [categories, setcategories] = useState(['One Punch Man']); \r\n    \r\n    const handleAdd = () =>{\r\n        setcategories( cat => [...cat] );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategorie setCategories = {setcategories}/>\r\n            <hr />\r\n\r\n            <button onClick= {handleAdd} >Agregar</button>\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid\r\n                            key={category} \r\n                            category = {category}/>\r\n                    ))\r\n                }\r\n            </ol>\r\n            {/* <ol>\r\n                {\r\n                    categories.map( categorie => {\r\n                        return <li key={ categorie } >{categorie}</li>\r\n                    })\r\n                }\r\n            </ol> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}